{{ ansible_managed | comment }}

[Unit]
Description=OpenObserve backup
After=network.target

[Service]
Type=oneshot
ExecStart={{ openobserve_backup_config_venv }}/bin/python {{ openobserve_backup_config_root }}/backup.py
WorkingDirectory={{ openobserve_backup_config_root }}
User={{ openobserve_backup_config_user }}

# Reduce Attack Surface
NoNewPrivileges=yes
PrivateTmp=true
ProtectHome=yes
ProtectSystem=yes
# ProtectSystem=strict
# ProtectProc=noaccess

PrivateDevices=yes
DeviceAllow=

# PrivateUsers=yes

UMask=077

# InaccessiblePaths=/proc

ProtectKernelTunables=true
ProtectKernelModules=yes
ProtectKernelLogs=yes
ProtectHostname=yes
ProtectClock=yes

ProtectControlGroups=true
LockPersonality=true
RestrictRealtime=true
RestrictNamespaces=yes
# RestrictNamespaces=~CLONE_NEWCGROUP CLONE_NEWIPC CLONE_NEWNET CLONE_NEWPID
RestrictSUIDSGID=yes
MemoryDenyWriteExecute=yes

# Only loopback needed
# PrivateNetwork=yes
RestrictAddressFamilies=AF_INET AF_INET6

IPAccounting=yes
{% if openobserve_webproxy_ip | string %}
# upstream communication can be limited to proxy
# but must be able to receive logs too...
# IPAddressAllow={{ openobserve_webproxy_ip }}
{% endif %}
IPAddressAllow=localhost link-local multicast 10.0.0.0/8 192.168.0.0/16

CapabilityBoundingSet=~CAP_AUDIT_CONTROL CAP_AUDIT_READ CAP_DAC_READ_SEARCH
CapabilityBoundingSet=~CAP_SYS_RAWIO
CapabilityBoundingSet=~CAP_SYS_PTRACE
CapabilityBoundingSet=~CAP_DAC_* CAP_FOWNER CAP_IPC_OWNER
CapabilityBoundingSet=~CAP_NET_ADMIN
CapabilityBoundingSet=~CAP_KILL
CapabilityBoundingSet=~CAP_NET_BIND_SERVICE CAP_NET_BROADCAST
CapabilityBoundingSet=~CAP_SYS_NICE CAP_SYS_RESOURCE
CapabilityBoundingSet=~CAP_SYS_BOOT
CapabilityBoundingSet=~CAP_LINUX_IMMUTABLE
CapabilityBoundingSet=~CAP_SYS_CHROOT
CapabilityBoundingSet=~CAP_BLOCK_SUSPEND
CapabilityBoundingSet=~CAP_LEASE
CapabilityBoundingSet=~CAP_SYS_PACCT
CapabilityBoundingSet=~CAP_SYS_TTY_CONFIG
CapabilityBoundingSet=~CAP_SYS_ADMIN
CapabilityBoundingSet=~CAP_SETUID CAP_SETGID
CapabilityBoundingSet=~CAP_SETPCAP
CapabilityBoundingSet=~CAP_CHOWN
CapabilityBoundingSet=~CAP_FSETID CAP_SETFCAP
CapabilityBoundingSet=~CAP_NET_RAW
CapabilityBoundingSet=~CAP_IPC_LOCK

{% if not (ansible_virtualization_type is defined and
          ansible_virtualization_type == "docker"
        )
%}
SystemCallFilter=@system-service
SystemCallFilter=~@debug @mount @cpu-emulation @obsolete @privileged @resources @reboot @swap @raw-io @module
# SystemCallFilter=~@debug @mount @cpu-emulation @obsolete @resources @reboot @swap @raw-io @module
# When system call is disallowed, return error code instead of killing process
SystemCallErrorNumber=EPERM
{% endif %}
SystemCallArchitectures=native

{% if openobserve_cgroups_restriction_enable | bool %}
CPUWeight={{ openobserve_cgroups_cpushares | default('1024') }}
CPUQuota={{ openobserve_cgroups_cpuquota | default('80%') }}
MemoryMax={{ openobserve_cgroups_memorylimit | default('4G') }}
{% endif %}

[Install]
WantedBy=default.target
