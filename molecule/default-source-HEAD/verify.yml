---

- name: Verify
  hosts: all
  vars:
    openobserve_root_user_user: root@example.com
    # pragma: allowlist secret
    openobserve_root_user_pass: root@example.com
    openobserve_home: /var/_openobserve
    binary_oo: "/var/_openobserve/openobserve/openobserve"
    ports:
      - { h: localhost, p: 5080 }
    is_container: false
    org_id: default
  pre_tasks:
    - name: Debug | var ansible_virtualization_type
      ansible.builtin.debug:
        var: ansible_virtualization_type
    - name: Set fact is_container
      ansible.builtin.set_fact:
        is_container: true
      when: >
        (ansible_virtualization_type is defined and
          (ansible_virtualization_type == "docker" or ansible_virtualization_type == "containerd"
           or ansible_virtualization_type == "container"
          )
        )
  tasks:
    - name: Check openobserve binary
      ansible.builtin.stat:
        path: "{{ binary_oo }}"
      register: bin

    - name: Ensure openobserve running
      ansible.builtin.command: pgrep -u _openobserve openobserve
      register: ps1
      changed_when: false
      failed_when: false
    - name: Validate ps output
      ansible.builtin.assert:
        that: ps1.stdout
      when:
        - not is_container|bool

    - name: Ensure procps package is present
      ansible.builtin.package:
        name: procps
        state: present
      when: ansible_os_family == "RedHat"
    - name: Debian | Ensure ps/pgrep is present
      ansible.builtin.package:
        name: procps
        state: present
      when: ansible_os_family == "Debian"
    - name: Check all processes
      ansible.builtin.command: ps aux
      changed_when: false
      register: psa
    - name: Debug | ps aux output
      ansible.builtin.debug:
        var: psa
        verbosity: 1

    - name: Ensure ports are listening
      ansible.builtin.wait_for:
        host: "{{ item.h }}"
        port: "{{ item.p }}"
        timeout: 10
      with_items: "{{ ports }}"
      when:
        - not is_container|bool

    - name: Get errors
      ansible.builtin.command: cat /var/log/openobserve/error.log
      changed_when: false
      failed_when: false
      register: errors
    - name: Validate no errors
      ansible.builtin.assert:
        that:
          - "'ERROR' in errors.stdout"
      ignore_errors: true  # noqa ignore-errors
      when:
        - not is_container|bool

    - name: Check few queries
      ansible.builtin.uri:
        url: "http://localhost:5080{{ item }}"
        url_username: "{{ openobserve_root_user_user }}"
        url_password: "{{ openobserve_root_user_pass }}"
        return_content: yes
      changed_when: false
      ignore_errors: true  # noqa ignore-errors
      loop:
        - "/web/"
        - "/api/{{ org_id }}/dashboards"
        - "/api/{{ org_id }}/alerts"
        - "/api/{{ org_id }}/users"
        - "/api/{{ org_id }}/streams"
      when:
        - not is_container|bool

    # https://openobserve.ai/docs/api/search/search/
    - name: Check last logs
      ansible.builtin.uri:
        url: "http://localhost:5080/api/default/default/_json"
        url_username: "{{ openobserve_root_user_user }}"
        url_password: "{{ openobserve_root_user_pass }}"
        method: POST
        body: |
          {
            "query": {
              "sql": "SELECT * FROM {stream} ",
              "from": 0,
              "size": 10
            },
            "search_type": "ui",
            "timeout": 0
          }
      changed_when: false
      ignore_errors: true  # noqa ignore-errors
      when:
        - not is_container|bool
