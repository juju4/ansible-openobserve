---

- name: Converge
  hosts: all
  environment:
    http_proxy: "{{ lookup('env', 'http_proxy') }}"
    https_proxy: "{{ lookup('env', 'https_proxy') }}"
    no_proxy: "{{ lookup('env', 'no_proxy') }}"
  remote_user: root
  vars:
    openobserve_dashboards_url:
      - https://github.com/openobserve/dashboards/raw/refs/heads/main/OpenObserve/OpenObserve%20Internals.dashboard.json
      - https://github.com/openobserve/dashboards/raw/refs/heads/main/OpenObserve/OpenObserve%20Infrastructure.dashboard.json
      - https://github.com/openobserve/dashboards/raw/refs/heads/main/Usage/Usage%20_%20Overall.dashboard.json
      - https://github.com/openobserve/dashboards/raw/refs/heads/main/Usage/Usage%20_%20Org.dashboard.json
    # https://openobserve.ai/docs/ingestion/logs/filebeat/
    filebeat_version: 8.x
    filebeat_output_elasticsearch_enabled: true
    filebeat_output_elasticsearch_hosts:
      - "localhost:5080"
    filebeat_output_elasticsearch_auth:
      username: "{{ openobserve_root_user_email }}"
      password: "{{ openobserve_root_user_pass }}"
    filebeat_template: "{{ lookup('env','GITHUB_WORKSPACE') }}/juju4.openobserve/templates/filebeat-openobserve.yml.j2"
    filebeat_inputs:
      - type: log
        paths:
          - "/var/log/*.log"
    filebeat_output_logstash_enabled: false
    filebeat_enable_logging: true
    filebeat_log_dir: /var/log/filebeat
    filebeat_log_filename: filebeat.log
    hardenwebserver_disable_http: true
    hardenwebserver_cert: mkcert
    hardenwebserver_https_template: ../../templates/nginx.conf.j2
    # hardenwebserver_header_csp: "default-src 'self'; script-src 'self' 'unsafe-inline' 'report-sample'; connect-src 'self'; img-src 'self'; style-src 'self' 'unsafe-inline' 'unsafe-eval'; font-src 'self' data:;base-uri 'none'; frame-ancestors 'none'; form-action 'self'; upgrade-insecure-requests; report-uri /csp/report.php;"
    hardenwebserver_header_csp: "upgrade-insecure-requests; report-uri /csp/report.php;"
    # hardenwebserver_ssl_cert: "/etc/letsencrypt/live/{{ ansible_fqdn }}/fullchain.pem"
    # hardenwebserver_ssl_key: "/etc/letsencrypt/live/{{ ansible_fqdn }}/privkey.pem"
    hardenwebserver_systemd_dir_acl:
      - { p: /etc/letsencrypt/archive, perm: rx, m: '0711' }
      - { p: /etc/letsencrypt/live, perm: rx, m: '0711' }
      - { p: "/etc/ssl/private", perm: rx, m: '0710' }
      - { p: "/var/log/nginx", perm: rwx, m: '0755' }
    hardenwebserver_systemd_files_acl:
      # - { p: "/etc/letsencrypt/live/{{ ansible_fqdn }}/privkey.pem", perm: r }
      - { p: "/etc/ssl/private/{{ ansible_fqdn }}.key", perm: r }
      - { p: "/etc/ssl/private/dhparam4.pem", perm: r }
  pre_tasks:
    - name: Ubuntu | Install python3
      ansible.builtin.raw: test -e /usr/bin/python3 || (apt -y update && apt install -y python3-minimal)
      register: python3
      changed_when: "'installed' in python3.stdout"
      when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version | int >= 16)
    - name: RedHat | Install python3
      ansible.builtin.raw: test -e /usr/bin/python3 || (yum install -y python3)
      register: python3
      changed_when: "'installed' in python3.stdout"
      when: (ansible_os_family == "RedHat" and ansible_distribution_major_version | int >= 8)
    - name: Gather Facts
      ansible.builtin.setup:
      when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version | int >= 16)
    - name: Ubuntu Bionic+, Redhat 8+ | Enforce python3 for ansible
      ansible.builtin.set_fact:
        ansible_python_interpreter: /usr/bin/python3
      when: >
        (ansible_distribution == "Ubuntu" and ansible_distribution_major_version | int >= 16) or
        (ansible_os_family == "RedHat" and ansible_distribution_major_version | int >= 8)
  roles:
    - geerlingguy.filebeat
    - { role: juju4.openobserve, openobserve_deploy_type: 'server' }
    - { role: juju4.otelcol,
        openobserve_server_ansible_host: localhost,
        otelcol_server_url: "https://localhost/api/default/",
        otelcol_auth_key_retrieve: true
    }
    - juju4.harden_nginx
